# App general
app.title=Aplicación Web Moderna
app.name=Aplicación Web Moderna
welcome.title=Bienvenido a la Aplicación Web Moderna

# Navegación
nav.health=Salud
nav.api=API

# Selector de idioma
language.current=🌐 Idioma
language.english=Inglés
language.spanish=Español
language.french=Francés

# Sección debug
debug.title=Pruebas HTTP Interactivas y Depuración
debug.subtitle=Herramienta Educativa del Lado del Cliente
debug.description=Esta sección demuestra solicitudes y respuestas HTTP utilizando la API Fetch de JavaScript. ¡Todas las interacciones mostrarán la comunicación HTTP real en acción!

debug.web.greeting=Saludo de Página Web
debug.web.description=Prueba la página web principal con un saludo personalizado
debug.api.endpoints=Endpoints de API
debug.api.description=Prueba la API REST con respuesta JSON
debug.health.check=Comprobación de Salud
debug.health.description=Prueba el endpoint de salud de la aplicación
debug.how.to.devtools=Cómo Abrir Dev Tools

debug.enter.name=Ingresa tu nombre
debug.enter.name.optional=Ingresa nombre (opcional)

debug.test.web=Probar Página Web
debug.test.api=Probar /api/hello
debug.test.health=Probar /actuator/health

debug.request=Solicitud HTTP
debug.response=Respuesta HTTP
debug.request.placeholder=Haz clic en un botón de prueba para ver los detalles de la solicitud HTTP...
debug.response.placeholder=Haz clic en un botón de prueba para ver los detalles de la respuesta HTTP...

debug.learning.notes=Notas de Aprendizaje
debug.note.fetch=API Fetch: Forma moderna de JavaScript para hacer solicitudes HTTP
debug.note.promise=Basado en Promesas: Operaciones asíncronas usando .then() y async/await
debug.note.json=Respuesta JSON: Los endpoints de API devuelven datos estructurados
debug.note.status=Códigos de Estado: 200 = éxito, 404 = no encontrado, 500 = error del servidor
debug.note.headers=Encabezados: Metadatos enviados con cada solicitud y respuesta

footer.copyright=&copy; 2025 Aplicación Web Moderna. Desarrollado con Spring Boot 3.5.3 & Kotlin 2.2.10